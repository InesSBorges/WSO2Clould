<?xml version="1.0" encoding="UTF-8"?>
<localEntry key="getPostVRS_XSLT" xmlns="http://ws.apache.org/ns/synapse">
    <xsl:stylesheet extension-element-prefixes="date" version="2.0" xmlns:dat="http://ws.wso2.org/dataservice" xmlns:date="http://exslt.org/dates-and-times" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match="/">
            <dat:getVerticalSign>
                <xsl:choose>
                    <xsl:when test="string-length(//operationUser) > 0">
                        <dat:UserCode>
                            <xsl:value-of select="//operationUser"/>
                        </dat:UserCode>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//verticalSign/id) > 0">
                        <dat:IdVerticalSign>
                            <xsl:value-of select="//verticalSign/id"/>
                        </dat:IdVerticalSign>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//verticalSign/code) > 0">
                        <dat:VerticalSignCode>
                            <xsl:value-of select="//verticalSign/code"/>
                        </dat:VerticalSignCode>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//idMasterObject) > 0">
                        <dat:IdMasterObject>
                            <xsl:value-of select="//idMasterObject"/>
                        </dat:IdMasterObject>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//roadComponent/id) > 0">
                        <dat:IdRoadComponent>
                            <xsl:value-of select="//roadComponent/id"/>
                        </dat:IdRoadComponent>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//roadComponent/code) > 0">
                        <dat:CodeComponent>
                            <xsl:value-of select="//roadComponent/code"/>
                        </dat:CodeComponent>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//verticalSignType/id) > 0">
                        <dat:IdVerticalSignType>
                            <xsl:value-of select="//verticalSignType/id"/>
                        </dat:IdVerticalSignType>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//verticalSignType/code) > 0">
                        <dat:VerticalSignTypeCode>
                            <xsl:value-of select="//verticalSignType/code"/>
                        </dat:VerticalSignTypeCode>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//calculationTypeCS/id) > 0">
                        <dat:IdCalculationTypeCS>
                            <xsl:value-of select="//calculationTypeCS/id"/>
                        </dat:IdCalculationTypeCS>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//calculationTypeCS/code) > 0">
                        <dat:CalculationTypeCodeCS>
                            <xsl:value-of select="//calculationTypeCS/code"/>
                        </dat:CalculationTypeCodeCS>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//calculationTypeMS/id) > 0">
                        <dat:IdCalculationTypeMS>
                            <xsl:value-of select="//calculationTypeMS/id"/>
                        </dat:IdCalculationTypeMS>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//calculationTypeMS/code) > 0">
                        <dat:CalculationTypeCodeMS>
                            <xsl:value-of select="//calculationTypeMS/code"/>
                        </dat:CalculationTypeCodeMS>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//directionI/id) > 0">
                        <dat:IdDirection>
                            <xsl:value-of select="//direction/id"/>
                        </dat:IdDirection>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//direction/code) > 0">
                        <dat:DirectionCode>
                            <xsl:value-of select="//direction/code"/>
                        </dat:DirectionCode>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//side/id) > 0">
                        <dat:IdSide>
                            <xsl:value-of select="//side/id"/>
                        </dat:IdSide>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//flagRegulator) > 0">
                        <dat:FlagRegulator>
                            <xsl:value-of select="//flagRegulator"/>
                        </dat:FlagRegulator>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//active) > 0">
                        <dat:Active>
                            <xsl:value-of select="//active"/>
                        </dat:Active>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//flagInspectionOpen) > 0">
                        <dat:FlagInspectionOpen>
                            <xsl:value-of select="//flagInspectionOpen"/>
                        </dat:FlagInspectionOpen>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//beginDate/begin) > 0">
                        <dat:StartDateBegin>
                            <xsl:value-of select="//beginDate/begin"/>
                        </dat:StartDateBegin>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//beginDate/end) > 0">
                        <dat:StartDateEnd>
                            <xsl:value-of select="//beginDate/end"/>
                        </dat:StartDateEnd>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//endDate/begin) > 0">
                        <dat:EndDateBegin>
                            <xsl:value-of select="//endDate/begin"/>
                        </dat:EndDateBegin>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//endDate/end) > 0">
                        <dat:EndDateEnd>
                            <xsl:value-of select="//endDate/end"/>
                        </dat:EndDateEnd>
                    </xsl:when>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//side/code) > 0">
                        <dat:SideCode>
                            <xsl:value-of select="//side/code"/>
                        </dat:SideCode>
                    </xsl:when>
                </xsl:choose>
            </dat:getVerticalSign>
        </xsl:template>
    </xsl:stylesheet>
</localEntry>
