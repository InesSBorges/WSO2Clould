<?xml version="1.0" encoding="UTF-8"?>
<localEntry key="roadComponenteValidatePks_XSLT" xmlns="http://ws.apache.org/ns/synapse">
    <xsl:stylesheet version="2.0" xmlns:dat="http://ws.wso2.org/dataservice" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match="/">
            <dat:getRoadComponentInput>
                <dat:idRoadComponent>
                    <xsl:value-of select="//envForEach//idRoadComponent"/>
                </dat:idRoadComponent>
                <xsl:choose>
                    <xsl:when test="string-length(//envForEach//verticalSignInfo/km) != 0">
                        <dat:kmStart>
                            <xsl:value-of select="//envForEach//verticalSignInfo/km"/>
                        </dat:kmStart>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="string-length(//returnGetVerticalSign//dat:verticalSignInfo/dat:km) > 0">
                            <dat:kmStart>
                                <xsl:value-of select="//returnGetVerticalSign//dat:verticalSignInfo/dat:km"/>
                            </dat:kmStart>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="string-length(//envForEach//verticalSignInfo/km) != 0">
                        <dat:kmEnd>
                            <xsl:value-of select="//envForEach//verticalSignInfo/km"/>
                        </dat:kmEnd>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="string-length(//returnGetVerticalSign//dat:verticalSignInfo/dat:km) > 0">
                            <dat:kmEnd>
                                <xsl:value-of select="//returnGetVerticalSign//dat:verticalSignInfo/dat:km"/>
                            </dat:kmEnd>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
            </dat:getRoadComponentInput>
        </xsl:template>
    </xsl:stylesheet>
</localEntry>
