<?xml version="1.0" encoding="UTF-8"?>
<api context="/VRS_VerticalSignSemToken" name="VRS_VerticalSignSemToken" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" uri-template="/getVerticalSign">
        <inSequence>
            <log>
                <property expression="$ctx:EnvRoot" name="EnvRoot" />
            </log>
            <enrich description="EnvRoot">
                <source clone="true" type="envelope" />
                <target property="EnvRoot" type="property" />
            </enrich>
            <log>
                <property expression="$ctx:EnvRoot" name="EnvRoot" />
            </log>
            <filter regex="true" source="$ctx:EnvRoot//verticalSign/verticalSign/id != '' or $ctx:EnvRoot//verticalSign/code != '' or $ctx:EnvRoot//roadComponent/id != '' or $ctx:EnvRoot//roadComponent/code != ''">
                <then>
                    <enrich description="EnvRoot for env">
                        <source clone="true" property="EnvRoot" type="property" />
                        <target type="envelope" />
                    </enrich>
                    <xslt key="getPostVRS_XSLT" />
                    <log level="full" />
                    <call blocking="true">
                        <endpoint>
                            <http method="post" uri-template="local:///services/verticalSignDBR/">
                                <suspendOnFailure>
                                    <initialDuration>-1</initialDuration>
                                    <progressionFactor>1</progressionFactor>
                                </suspendOnFailure>
                                <markForSuspension>
                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                </markForSuspension>
                            </http>
                        </endpoint>
                    </call>
                    <filter regex="true" source="count(//*[local-name() = 'IdVerticalSign']) = 0">
                        <then>
                            <payloadFactory description="verticalSignDBR" media-type="xml">
                                <format>
                                    <result>
                                        <timestamp>
                                    $1</timestamp>
                                        <resultDescription>$2</resultDescription>
                                        <totalRecords>$3</totalRecords>
                                        <hasmore>$4</hasmore>
                                        <offset>
                                    $5</offset>
                                        <message>$6</message>
                                        <status>$7</status>
                                    </result>
                                </format>
                                <args>
                                    <arg evaluator="xml"
                                        expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')" />
                                    <arg
                                        value="SustIMS0151 - Registo inativo ou inexistente ou utilizador sem permissão de acesso aos parâmetros enviados." />
                                    <arg value="0" />
                                    <arg value="false" />
                                    <arg value="0" />
                                    <arg value="Bad Request" />
                                    <arg value="400" />
                                </args>
                            </payloadFactory>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="400" />
                            <property name="messageType" scope="axis2" type="STRING"
                                value="application/json" />
                            <respond />
                        </then>
                        <else>
                            <xslt key="getResponseVRS_XSLT" />
                            <payloadFactory description="returnJson" media-type="json">
                                <format> $1 </format>
                                <args>
                                    <arg evaluator="xml" expression="$body/*[local-name()='text']" />
                                </args>
                            </payloadFactory>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
                        </else>
                    </filter>
                    <property name="messageType" scope="axis2" type="STRING"
                        value="application/json" />
                    <respond />
                </then>
                <else>
                    <log level="custom">
                        <property expression="$ctx:EnvRoot" name="EnvRoot" />
                    </log>
                    <payloadFactory description="returnErroLanguage" media-type="xml">
                        <format>
                            <result>
                                <timestamp>
                            $1</timestamp>
                                <resultDescription>$2</resultDescription>
                                <totalRecords>$3</totalRecords>
                                <hasmore>$4</hasmore>
                                <offset>$5</offset>
                                <message>
                            $6</message>
                                <status>$7</status>
                            </result>
                        </format>
                        <args>
                            <arg evaluator="xml"
                                expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')" />
                            <arg
                                value="SustIMS0133 - Informar id ou code do VerticalSing ou id ou code do RoadCompenent de preenchimento obrigatório." />
                            <arg value="0" />
                            <arg value="false" />
                            <arg value="0" />
                            <arg value="Bad Request" />
                            <arg value="400" />
                        </args>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400" />
                    <property name="messageType" scope="axis2" type="STRING"
                        value="application/json" />
                    <respond />
                </else>
            </filter>
        </inSequence>
        <outSequence />
        <faultSequence />
    </resource>
    <resource methods="GET" uri-template="/verticalSign?verticalSignId={verticalSignId}">
        <inSequence>
            <log level="full">
                <property name="message" value="Processing /verticalSign request" />
            </log>
            <filter regex="true"
                source="$ctx:query.param.verticalSignId != '' or $ctx:query.param.verticalSignCode != '' or $ctx:query.param.roadComponentId != '' or $ctx:query.param.roadComponentCode != ''">
                <then>
                    <payloadFactory media-type="xml">
                        <format>
                            <soapenv:Envelope
                                xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                                <soapenv:Body>
                                    <teste />
                                </soapenv:Body>
                            </soapenv:Envelope>
                        </format>
                        <args />
                    </payloadFactory>
                    <xslt key="getVRS_XSLT">
                        <property expression="$ctx:query.param.operationUser" name="operationUser" />
                        <property expression="$ctx:query.param.verticalSignId" name="verticalSignId" />
                        <property expression="$ctx:query.param.verticalSignCode"
                            name="verticalSignCode" />
                        <property expression="$ctx:query.param.idMasterObject" name="idMasterObject" />
                        <property expression="$ctx:query.param.roadComponentId"
                            name="roadComponentId" />
                        <property expression="$ctx:query.param.roadComponentCode"
                            name="roadComponentCode" />
                        <property expression="$ctx:query.param.verticalSignTypeId"
                            name="verticalSignTypeId" />
                        <property expression="$ctx:query.param.verticalSignTypeCode"
                            name="verticalSignTypeCode" />
                        <property expression="$ctx:query.param.calculationTypeCSId"
                            name="calculationTypeCSId" />
                        <property expression="$ctx:query.param.calculationTypeCSCode"
                            name="calculationTypeCSCode" />
                        <property expression="$ctx:query.param.calculationTypeMSId"
                            name="calculationTypeMSId" />
                        <property expression="$ctx:query.param.calculationTypeMSCode"
                            name="calculationTypeMSCode" />
                        <property expression="$ctx:query.param.directionId" name="directionId" />
                        <property expression="$ctx:query.param.directionCode" name="directionCode" />
                        <property expression="$ctx:query.param.sideId" name="sideId" />
                        <property expression="$ctx:query.param.flagRegulator" name="flagRegulator" />
                        <property expression="$ctx:query.param.active" name="active" />
                        <property expression="$ctx:query.param.flagInspectionOpen"
                            name="flagInspectionOpen" />
                        <property expression="$ctx:query.param.beginDateBegin" name="beginDateBegin" />
                        <property expression="$ctx:query.param.beginDateEnd" name="beginDateEnd" />
                        <property expression="$ctx:query.param.endDateBegin" name="endDateBegin" />
                        <property expression="$ctx:query.param.endDateEnd" name="endDateEnd" />
                        <property expression="$ctx:query.param.sideCode" name="sideCode" />
                    </xslt>
                    <call blocking="true">
                        <endpoint>
                            <http method="post" uri-template="local:///services/verticalSignDBR/">
                                <suspendOnFailure>
                                    <initialDuration>-1</initialDuration>
                                    <progressionFactor>1</progressionFactor>
                                </suspendOnFailure>
                                <markForSuspension>
                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                </markForSuspension>
                            </http>
                        </endpoint>
                    </call>
                    <filter regex="true" source="count(//*[local-name() = 'IdVerticalSign']) = 0">
                        <then>
                            <payloadFactory description="returnErroLanguage" media-type="xml">
                                <format>
                                    <result>
                                        <timestamp>
                                            $1</timestamp>
                                        <resultDescription>$2</resultDescription>
                                        <totalRecords>$3</totalRecords>
                                        <hasmore>$4</hasmore>
                                        <offset>
                                            $5</offset>
                                        <message>$6</message>
                                        <status>$7</status>
                                    </result>
                                </format>
                                <args>
                                    <arg evaluator="xml"
                                        expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')" />
                                    <arg
                                        value="SustIMS0151 - Registo inativo ou inexistente ou utilizador sem permissão de acesso aos parâmetros enviados." />
                                    <arg value="0" />
                                    <arg value="false" />
                                    <arg value="0" />
                                    <arg value="Bad Request" />
                                    <arg value="400" />
                                </args>
                            </payloadFactory>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="400" />
                            <property name="messageType" scope="axis2" type="STRING"
                                value="application/json" />
                            <respond />
                        </then>
                        <else>
                            <xslt key="getResponseVRS_XSLT" />
                            <payloadFactory description="returnJson" media-type="json">
                                <format> $1 </format>
                                <args>
                                    <arg evaluator="xml" expression="$body/*[local-name()='text']" />
                                </args>
                            </payloadFactory>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="200" />
                        </else>
                    </filter>
                    <property name="messageType" scope="axis2" type="STRING"
                        value="application/json" />
                    <respond />
                </then>
                <else>
                    <log level="custom">
                        <property expression="$ctx:EnvRoot" name="EnvRoot" />
                    </log>
                    <payloadFactory description="returnErroLanguage" media-type="xml">
                        <format>
                            <result>
                                <timestamp>
                                    $1</timestamp>
                                <resultDescription>$2</resultDescription>
                                <totalRecords>$3</totalRecords>
                                <hasmore>$4</hasmore>
                                <offset>$5</offset>
                                <message>
                                    $6</message>
                                <status>$7</status>
                            </result>
                        </format>
                        <args>
                            <arg evaluator="xml"
                                expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')" />
                            <arg
                                value="SustIMS0133 - Informar id ou code do VerticalSing ou id ou code do RoadCompenent de preenchimento obrigatório." />
                            <arg value="0" />
                            <arg value="false" />
                            <arg value="0" />
                            <arg value="Bad Request" />
                            <arg value="400" />
                        </args>
                    </payloadFactory>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="400" />
                    <property name="messageType" scope="axis2" type="STRING"
                        value="application/json" />
                    <respond />
                </else>
            </filter>
        </inSequence>
        <outSequence>
            <send />
        </outSequence>
        <faultSequence>
            <log level="full">
                <property name="message" value="Error processing /verticalSign request" />
            </log>
            <payloadFactory description="returnError Token" media-type="xml">
                <format>
                    <result>
                        <timestamp>
                            $1</timestamp>
                        <message>$2</message>
                        <status>$3</status>
                    </result>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property(&quot;SYSTEM_DATE&quot;,&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;)"/>
                    <arg value="Unauthorized"/>
                    <arg value="401"/>
                </args>
            </payloadFactory>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="401"/>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <respond/>
        </faultSequence>
    </resource>
    <resource methods="POST" uri-template="/setVerticalSing">
        <inSequence>
            <enrich description="EnvRoot">
                <source clone="true" type="envelope"/>
                <target property="EnvRoot" type="property"/>
            </enrich>
            <property name="totalErros" scope="default" type="STRING" value="0"/>
            <log level="custom">
                <property expression="$ctx:EnvRoot" name="EnvRoot"/>
                <property expression="$ctx:totalErros" name="totalErros"/>
            </log>
            <sequence key="validateLanguageCode"/>
            <payloadFactory description="insertTableDesc" media-type="xml">
                <format>
                    <verticalSigns/>
                </format>
                <args/>
            </payloadFactory>
            <enrich description="EnvVerticalSign">
                <source clone="true" type="envelope"/>
                <target property="EnvVerticalSign" type="property"/>
            </enrich>
            <foreach expression="$ctx:EnvRoot//verticalSigns/verticalSign">
                <sequence>
                    <enrich description="envForEach">
                        <source clone="true" type="envelope"/>
                        <target property="envForEach" type="property"/>
                    </enrich>
                    <property name="flagError" scope="default" type="STRING" value="false"/>
                    <log level="custom">
                        <property expression="$ctx:envForEach" name="envForEach"/>
                    </log>
                    <filter description="IfVerticalSign" regex="true" source="$ctx:envForEach//verticalSign/id != ''">
                        <then>
                            <log level="custom">
                                <property name="LOG" value="IfVerticalSign1"/>
                            </log>
                            <payloadFactory media-type="xml">
                                <format>
                                    <soapenv:Envelope xmlns:dat="http://ws.wso2.org/dataservice" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                                        <soapenv:Body>
                                            <dat:getVerticalSign>
                                                <IdVerticalSign>
                                    $1</IdVerticalSign>
                                            </dat:getVerticalSign>
                                        </soapenv:Body>
                                    </soapenv:Envelope>
                                </format>
                                <args>
                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id"/>
                                </args>
                            </payloadFactory>
                            <call blocking="true">
                                <endpoint>
                                    <http method="post" uri-template="local:///services/verticalSignDBR/">
                                        <suspendOnFailure>
                                            <initialDuration>-1</initialDuration>
                                            <progressionFactor>1</progressionFactor>
                                        </suspendOnFailure>
                                        <markForSuspension>
                                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                        </markForSuspension>
                                    </http>
                                </endpoint>
                            </call>
                            <filter regex="true" source="string-length(//*[local-name() = 'IdVerticalSign']) != 0">
                                <then>
                                    <log level="custom">
                                        <property name="LOG" value="IfVerticalSign3"/>
                                    </log>
                                    <enrich description="returnGetVerticalSign">
                                        <source clone="true" type="envelope"/>
                                        <target property="returnGetVerticalSign" type="property"/>
                                    </enrich>
                                    <log level="custom">
                                        <property name="LOG" value="returnGetVerticalSign"/>
                                        <property expression="$ctx:returnGetVerticalSign" name="LOG"/>
                                    </log>
                                    <filter description="IfNoRecordsVerticalSign" regex="true" source="count($ctx:returnGetVerticalSign//*[local-name() = 'IdVerticalSign']) = 0">
                                        <then>
                                            <log level="custom">
                                                <property name="LOG" value="IfNoRecordsVerticalSign"/>
                                            </log>
                                            <payloadFactory description="LanguageCode" media-type="xml">
                                                <format>
                                                    <result>
                                                        <timestamp>
                                                    $1</timestamp>
                                                        <resultDescription>$2</resultDescription>
                                                        <message>$3</message>
                                                        <status>
                                                    $4</status>
                                                        <id>$5</id>
                                                        <code>$6</code>
                                                    </result>
                                                </format>
                                                <args>
                                                    <arg evaluator="xml" expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')"/>
                                                    <arg value="SustIMS0151 - Registo inativo ou inexistente. 1"/>
                                                    <arg value="Bad Request"/>
                                                    <arg value="400"/>
                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id"/>
                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/code"/>
                                                </args>
                                            </payloadFactory>
                                            <enrich description="add module EnvVerticalSign">
                                                <source clone="true" xpath="//*[local-name() = 'result']"/>
                                                <target action="child" xpath="$ctx:EnvVerticalSign//*[local-name() = 'verticalSigns']"/>
                                            </enrich>
                                        </then>
                                        <else>
                                            <sequence key="validationFlowSetVerticalSing"/>
                                            <log level="custom">
                                                <property expression="$ctx:envForEach//verticalSignInfo/km" name="LOG km"/>
                                            </log>
                                            <filter description="IfValidateKm" regex="true" source="$ctx:envForEach//verticalSignInfo/km != ''">
                                                <then>
                                                    <filter description="IfValidateKm" regex="true" source="$ctx:envForEach//idRoadComponent != ''">
                                                        <then>
                                                            <payloadFactory media-type="xml">
                                                                <format>
                                                                    <dat:validateRoadComponentPKDB xmlns:dat="http://ws.wso2.org/dataservice">
                                                                        <dat:IdRoadComponent>
                                                                    $1</dat:IdRoadComponent>
                                                                        <dat:KmStart>$2</dat:KmStart>
                                                                        <dat:KmEnd>
                                                                    $2</dat:KmEnd>
                                                                    </dat:validateRoadComponentPKDB>
                                                                </format>
                                                                <args>
                                                                    <arg evaluator="xml" expression="$ctx:envForEach//idRoadComponent"/>
                                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSignInfo/km"/>
                                                                </args>
                                                            </payloadFactory>
                                                            <log level="custom">
                                                                <property name="LOG" value="IfValidateKm1"/>
                                                            </log>
                                                            <log level="full"/>
                                                            <call blocking="true">
                                                                <endpoint>
                                                                    <http method="post" uri-template="local:///services/ValidateRoadComponentPKDB/">
                                                                        <suspendOnFailure>
                                                                            <initialDuration>-1</initialDuration>
                                                                            <progressionFactor>1</progressionFactor>
                                                                        </suspendOnFailure>
                                                                        <markForSuspension>
                                                                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                                                        </markForSuspension>
                                                                    </http>
                                                                </endpoint>
                                                            </call>
                                                            <log level="custom">
                                                                <property name="LOG" value="IfValidateKm2"/>
                                                            </log>
                                                            <log level="full"/>
                                                            <filter description="IfRoadComponentPksValide" xpath="//*[local-name()='result'] = 0">
                                                                <then>
                                                                    <payloadFactory description="returnErroLanguage" media-type="xml">
                                                                        <format>
                                                                            <result>
                                                                                <timestamp>
                                                                            $1</timestamp>
                                                                                <resultDescription>$2</resultDescription>
                                                                                <message>
                                                                            $3</message>
                                                                                <status>$4</status>
                                                                                <id>
                                                                            $5</id>
                                                                                <code>$6</code>
                                                                            </result>
                                                                        </format>
                                                                        <args>
                                                                            <arg evaluator="xml" expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')"/>
                                                                            <arg value="SustIMS0114 - Erro na validação da informação (roadComponent PKs)"/>
                                                                            <arg evaluator="xml" expression="//*[local-name()='ErrorMessage']"/>
                                                                            <arg value="400"/>
                                                                            <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id/text()"/>
                                                                            <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/code/text()"/>
                                                                        </args>
                                                                    </payloadFactory>
                                                                    <property name="flagError" scope="default" type="STRING" value="true"/>
                                                                    <enrich description="add module EnvVerticalSign">
                                                                        <source clone="true" xpath="//*[local-name() = 'result']"/>
                                                                        <target action="child" xpath="$ctx:EnvVerticalSign//*[local-name() = 'verticalSigns']"/>
                                                                    </enrich>
                                                                </then>
                                                                <else>
                                                                    <enrich description="returnValidateRoadComponentPKDB">
                                                                        <source clone="true" type="envelope"/>
                                                                        <target property="returnValidateRoadComponentPKDB" type="property"/>
                                                                    </enrich>
                                                                </else>
                                                            </filter>
                                                        </then>
                                                        <else>
                                                            <payloadFactory media-type="xml">
                                                                <format>
                                                                    <dat:validateRoadComponentPKDB xmlns:dat="http://ws.wso2.org/dataservice">
                                                                        <dat:IdRoadComponent>
                                                                    $1</dat:IdRoadComponent>
                                                                        <dat:KmStart>$2</dat:KmStart>
                                                                        <dat:KmEnd>
                                                                    $2</dat:KmEnd>
                                                                    </dat:validateRoadComponentPKDB>
                                                                </format>
                                                                <args>
                                                                    <arg evaluator="xml" expression="$ctx:returnGetVerticalSign//IdRoadComponent"/>
                                                                    <arg evaluator="xml" expression="$ctx:returnGetVerticalSign//Km"/>
                                                                </args>
                                                            </payloadFactory>
                                                            <call blocking="true">
                                                                <endpoint>
                                                                    <http method="post" uri-template="local:///services/ValidateRoadComponentPKDB/">
                                                                        <suspendOnFailure>
                                                                            <initialDuration>-1</initialDuration>
                                                                            <progressionFactor>1</progressionFactor>
                                                                        </suspendOnFailure>
                                                                        <markForSuspension>
                                                                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                                                        </markForSuspension>
                                                                    </http>
                                                                </endpoint>
                                                            </call>
                                                            <log level="custom">
                                                                <property name="IfRoadComponentPksValide2" value="IfRoadComponentPksValide2"/>
                                                            </log>
                                                            <log level="full"/>
                                                            <filter description="IfRoadComponentPksValide" xpath="count(//*[local-name()='IdRoadComponent'])">
                                                                <then>
                                                                    <payloadFactory description="returnErroLanguage" media-type="xml">
                                                                        <format>
                                                                            <result>
                                                                                <timestamp>
                                                                            $1</timestamp>
                                                                                <resultDescription>$2</resultDescription>
                                                                                <message>
                                                                            $3</message>
                                                                                <status>$4</status>
                                                                                <id>
                                                                            $5</id>
                                                                                <code>$6</code>
                                                                            </result>
                                                                        </format>
                                                                        <args>
                                                                            <arg evaluator="xml" expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')"/>
                                                                            <arg value="SustIMS0114 - Erro na validação da informação (roadComponent PKs) al"/>
                                                                            <arg value="//*[local-name()='ErrorMessage']"/>
                                                                            <arg value="400"/>
                                                                            <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id"/>
                                                                            <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/code"/>
                                                                        </args>
                                                                    </payloadFactory>
                                                                    <property name="flagError" scope="default" type="STRING" value="true"/>
                                                                    <enrich description="add module EnvVerticalSign">
                                                                        <source clone="true" xpath="//*[local-name() = 'result']"/>
                                                                        <target action="child" xpath="$ctx:EnvVerticalSign//*[local-name() = 'verticalSigns']"/>
                                                                    </enrich>
                                                                </then>
                                                                <else>
                                                                    <enrich description="returnValidateRoadComponentPKDB">
                                                                        <source clone="true" type="envelope"/>
                                                                        <target property="returnValidateRoadComponentPKDB" type="property"/>
                                                                    </enrich>
                                                                </else>
                                                            </filter>
                                                        </else>
                                                    </filter>
                                                </then>
                                                <else>
                                                    <filter description="IfValidateKm" regex="true" source="$ctx:envForEach//verticalSign/id = ''">
                                                        <then>
                                                            <payloadFactory description="ValidateKmError" media-type="xml">
                                                                <format>
                                                                    <result>
                                                                        <timestamp>
                                                                    $1</timestamp>
                                                                        <resultDescription>$2</resultDescription>
                                                                        <message>
                                                                    $3</message>
                                                                        <status>$4</status>
                                                                        <id>$5</id>
                                                                        <code>$6</code>
                                                                    </result>
                                                                </format>
                                                                <args>
                                                                    <arg evaluator="xml" expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')"/>
                                                                    <arg value="SustIMS0219 - Km de preenchimento obrigatório"/>
                                                                    <arg value="Bad Request"/>
                                                                    <arg value="400"/>
                                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id"/>
                                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/code"/>
                                                                </args>
                                                            </payloadFactory>
                                                            <property name="flagError" scope="default" type="STRING" value="true"/>
                                                            <enrich description="add module EnvVerticalSign">
                                                                <source clone="true" xpath="//*[local-name() = 'result']"/>
                                                                <target action="child" xpath="$ctx:EnvVerticalSign//*[local-name() = 'verticalSigns']"/>
                                                            </enrich>
                                                        </then>
                                                        <else>
                                                            <filter description="IfRoadComponentValidatePks" regex="true" source="$ctx:envForEach//idRoadComponent != ''">
                                                                <then>
                                                                    <log level="custom">
                                                                        <property name="LOG" value="IfRoadComponentValidatePks"/>
                                                                    </log>
                                                                    <payloadFactory description="ValidateKmError" media-type="xml">
                                                                        <format>
                                                                            <result>
                                                                                <envForEach>
                                                                            $1</envForEach>
                                                                                <returnGetVerticalSign>$2</returnGetVerticalSign>
                                                                            </result>
                                                                        </format>
                                                                        <args>
                                                                            <arg evaluator="xml" expression="$ctx:envForEach"/>
                                                                            <arg evaluator="xml" expression="$ctx:returnGetVerticalSign"/>
                                                                        </args>
                                                                    </payloadFactory>
                                                                    <xslt key="roadComponenteValidatePks_XSLT"/>
                                                                    <call blocking="true">
                                                                        <endpoint>
                                                                            <http method="post" uri-template="local:///services/ValidateRoadComponentPKDB/">
                                                                                <suspendOnFailure>
                                                                                    <initialDuration>-1</initialDuration>
                                                                                    <progressionFactor>1</progressionFactor>
                                                                                </suspendOnFailure>
                                                                                <markForSuspension>
                                                                                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                                                                                </markForSuspension>
                                                                            </http>
                                                                        </endpoint>
                                                                    </call>
                                                                    <log level="custom">
                                                                        <property name="IfRoadComponentPksValide1" value="IfRoadComponentPksValide1"/>
                                                                    </log>
                                                                    <log level="full"/>
                                                                    <filter description="IfRoadComponentPksValide" xpath="count(//*[local-name()='IdRoadComponent'])">
                                                                        <then>
                                                                            <payloadFactory description="returnErroLanguage" media-type="xml">
                                                                                <format>
                                                                                    <result>
                                                                                        <timestamp>
                                                                                    $1</timestamp>
                                                                                        <resultDescription>$2</resultDescription>
                                                                                        <message>
                                                                                    $3</message>
                                                                                        <status>$4</status>
                                                                                        <id>
                                                                                    $5</id>
                                                                                        <code>$6</code>
                                                                                    </result>
                                                                                </format>
                                                                                <args>
                                                                                    <arg evaluator="xml" expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss.SSSXXX')"/>
                                                                                    <arg value="SustIMS0114 - Erro na validação da informação (roadComponent PKs)"/>
                                                                                    <arg value="//*[local-name()='ErrorMessage']"/>
                                                                                    <arg value="400"/>
                                                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id"/>
                                                                                    <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/code"/>
                                                                                </args>
                                                                            </payloadFactory>
                                                                            <property name="flagError" scope="default" type="STRING" value="true"/>
                                                                            <enrich description="add module EnvVerticalSign">
                                                                                <source clone="true" xpath="//*[local-name() = 'result']"/>
                                                                                <target action="child" xpath="$ctx:EnvVerticalSign//*[local-name() = 'verticalSigns']"/>
                                                                            </enrich>
                                                                        </then>
                                                                        <else>
                                                                            <enrich description="returnValidateRoadComponentPKDB">
                                                                                <source clone="true" type="envelope"/>
                                                                                <target property="returnValidateRoadComponentPKDB" type="property"/>
                                                                            </enrich>
                                                                        </else>
                                                                    </filter>
                                                                </then>
                                                                <else/>
                                                            </filter>
                                                        </else>
                                                    </filter>
                                                </else>
                                            </filter>
                                        </else>
                                    </filter>
                                </then>
                                <else>
                                    <payloadFactory description="LanguageCode" media-type="xml">
                                        <format>
                                            <result>
                                                <resultDescription>
                                            $1</resultDescription>
                                                <message>$2</message>
                                                <status>$3</status>
                                                <id>$4</id>
                                                <code>$5</code>
                                            </result>
                                        </format>
                                        <args>
                                            <arg value="SustIMS0011 - Erro ao efectuar a pesquisa (verticalSign)"/>
                                            <arg value="Bad Request"/>
                                            <arg value="500"/>
                                            <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/id"/>
                                            <arg evaluator="xml" expression="$ctx:envForEach//verticalSign/code"/>
                                        </args>
                                    </payloadFactory>
                                    <enrich description="add module EnvVerticalSign">
                                        <source clone="true" xpath="//*[local-name() = 'result']"/>
                                        <target action="child" xpath="$ctx:EnvVerticalSign//*[local-name() = 'verticalSigns']"/>
                                    </enrich>
                                </else>
                            </filter>
                        </then>
                        <else/>
                    </filter>
                    <filter description="IfVerticalSignOperation" xpath="($ctx:envForEach//verticalSign/id = '' or not($ctx:envForEach//verticalSign/id)) and ($ctx:envForEach//version/endDate = '' or not($ctx:envForEach//version/endDate))">
                        <then>
                            <log level="custom">
                                <property name="sequenceInsert" value="sequenceInsert"/>
                            </log>
                            <sequence key="validationFlowSetVerticalSing"/>
                            <sequence key="insertVerticalSignOperation"/>
                        </then>
                        <else>
                            <filter description="IfVerticalSignOperationUpdate" xpath="$ctx:envForEach//verticalSign/id != '' and ($ctx:envForEach//verticalSign/code != '' or $ctx:envForEach//descVerticalSign/smallDescription != '' or $ctx:envForEach//descVerticalSign/mediumDescription != '' or $ctx:envForEach//descVerticalSign/largeDescription != '' or $ctx:envForEach//verticalSignType != '' or $ctx:envForEach//calculationTypeCS != '' or $ctx:envForEach//calculationTypeMS != '' or $ctx:envForEach//direction != '' or $ctx:envForEach//side != '' or $ctx:envForEach//idRoadComponent != '' or $ctx:envForEach//verticalSignInfo != '' or $ctx:envForEach//version != '')">
                                <then>
                                    <log level="custom">
                                        <property name="sequenceUpdate" value="sequenceUpdate"/>
                                    </log>
                                    <sequence key="updateVerticalSignOperation"/>
                                </then>
                                <else/>
                            </filter>
                            <filter description="IfVerticalSignOperationDelete" xpath="$ctx:envForEach//verticalSign//id != '' and (not($ctx:envForEach//verticalSign//code) or $ctx:envForEach//verticalSign//code = '') and ($ctx:envForEach//descVerticalSign = '' or not($ctx:envForEach//descVerticalSign))  and ($ctx:envForEach//verticalSignType = '' or not($ctx:envForEach//verticalSignType)) and ($ctx:envForEach//calculationTypeCS = '' or not($ctx:envForEach//calculationTypeCS)) and ($ctx:envForEach//calculationTypeMS = '' or not($ctx:envForEach//calculationTypeMS)) and ($ctx:envForEach//direction = '' or not($ctx:envForEach//direction)) and ($ctx:envForEach//side = '' or not($ctx:envForEach//side)) and ($ctx:envForEach//idRoadComponent = '' or not($ctx:envForEach//idRoadComponent)) and ($ctx:envForEach//verticalSignInfo = '' or not($ctx:envForEach//verticalSignInfo)) and ($ctx:envForEach//version = '' or not($ctx:envForEach//version))">
                                <then>
                                    <log level="custom">
                                        <property name="sequenceDelete" value="sequenceDelete"/>
                                    </log>
                                    <sequence key="deleteVerticalSignOperation"/>
                                </then>
                                <else/>
                            </filter>
                        </else>
                    </filter>
                </sequence>
            </foreach>
            <enrich description="EnvVerticalSign for env">
                <source clone="true" property="EnvVerticalSign" type="property"/>
                <target type="body"/>
            </enrich>
            <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
