<?xml version="1.0" encoding="UTF-8"?>
<localEntry key="putVerticalSign_XSLT" xmlns="http://ws.apache.org/ns/synapse">
    <xsl:stylesheet extension-element-prefixes="date" version="2.0" xmlns:dat="http://ws.wso2.org/dataservice" xmlns:date="http://exslt.org/dates-and-times" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match="/">
            <dat:putVerticalSign>
                <dat:IdVerticalSign>
                    <xsl:value-of select="//envForEach/verticalSign/id"/>
                </dat:IdVerticalSign>
                <xsl:choose>
                    <xsl:when test="not(//envForEach/verticalSign/code)">
                        <dat:VerticalSignCode>
                            <xsl:value-of select="//returnGetVerticalSign//VerticalSignCode/text()"/>
                        </dat:VerticalSignCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:VerticalSignCode>
                            <xsl:value-of select="//envForEach//verticalSign/code"/>
                        </dat:VerticalSignCode>
                    </xsl:otherwise>
                </xsl:choose>
                <dat:IdMasterObject>
                    <xsl:value-of select="//returnGetVerticalSign//IdMasterObject"/>
                </dat:IdMasterObject>
                <dat:IdTableDesc>
                    <xsl:value-of select="//returnGetVerticalSign//IdTableDescVerticalSign"/>
                </dat:IdTableDesc>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignType/id)">
                        <dat:IdVerticalSignType>
                            <xsl:value-of select="//returnGetVerticalSign//IdVerticalSignType"/>
                        </dat:IdVerticalSignType>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:IdVerticalSignType>
                            <xsl:value-of select="//envForEach//verticalSignType/id"/>
                        </dat:IdVerticalSignType>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="(not(//envForEach//calculationTypeCS/id) or //envForEach//calculationTypeCS/id ='') and not(not(//envForEach//calculationTypeCS/code))">
                        <dat:IdCalculationTypeCS>
                            <xsl:value-of select="//returnCalculationTypeCSValidateVRSFK//IdForeignKey"/>
                        </dat:IdCalculationTypeCS>
                    </xsl:when>
                    <xsl:when test="not(//envForEach//calculationTypeCS/id) and not(//envForEach//calculationTypeCS/code)">
                        <dat:IdCalculationTypeCS>
                            <xsl:value-of select="//returnGetVerticalSign//IdCalculationTypeCS"/>
                        </dat:IdCalculationTypeCS>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:IdCalculationTypeCS>
                            <xsl:value-of select="//envForEach//calculationTypeCS/id"/>
                        </dat:IdCalculationTypeCS>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="(not(//envForEach//calculationTypeMS/id) or //envForEach//calculationTypeMS/id = '') and not(not(//envForEach//calculationTypeMS/code)) ">
                        <dat:IdCalculationTypeMS>
                            <xsl:value-of select="//returnCalculationTypeValidateVRSFK//IdForeignKey"/>
                        </dat:IdCalculationTypeMS>
                    </xsl:when>
                    <xsl:when test="not(//envForEach//calculationTypeMS/id) and not(//envForEach//calculationTypeMS/code)">
                        <dat:IdCalculationTypeMS>
                            <xsl:value-of select="//returnGetVerticalSign//IdCalculationTypeMS"/>
                        </dat:IdCalculationTypeMS>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:IdCalculationTypeMS>
                            <xsl:value-of select="//envForEach//calculationTypeMS/id"/>
                        </dat:IdCalculationTypeMS>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/km)">
                        <dat:Km>
                            <xsl:value-of select="//returnGetVerticalSign//Km"/>
                        </dat:Km>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Km>
                            <xsl:value-of select="//envForEach//verticalSignInfo/km"/>
                        </dat:Km>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/gpsCoordinateM)">
                        <dat:GPSCoordinateM>
                            <xsl:value-of select="//returnGetVerticalSign//GPSCoordinateM"/>
                        </dat:GPSCoordinateM>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:GPSCoordinateM>
                            <xsl:value-of select="//envForEach//verticalSignInfo/gpsCoordinateM"/>
                        </dat:GPSCoordinateM>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/gpsCoordinateP)">
                        <dat:GPSCoordinateP>
                            <xsl:value-of select="//returnGetVerticalSign//GPSCoordinateP"/>
                        </dat:GPSCoordinateP>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:GPSCoordinateP>
                            <xsl:value-of select="//envForEach//verticalSignInfo/gpsCoordinateP"/>
                        </dat:GPSCoordinateP>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/constructionDate)">
                        <dat:ConstructionDate>
                            <xsl:value-of select="substring(//returnGetVerticalSign//ConstructionDate, 0,11)"/>
                        </dat:ConstructionDate>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:ConstructionDate>
                            <xsl:value-of select="substring(//envForEach//verticalSignInfo/constructionDate, 0,11)"/>
                        </dat:ConstructionDate>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="(not(//envForEach//direction/id) or //envForEach//direction/id != '') and not(not(//envForEach//direction/code))">
                        <dat:IdDirection>
                            <xsl:value-of select="//returnDirectionValidateVRSFK//IdForeignKey"/>
                        </dat:IdDirection>
                    </xsl:when>
                    <xsl:when test="not(//envForEach//direction/id) and not(//envForEach//direction/code)">
                        <dat:IdDirection>
                            <xsl:value-of select="//returnGetVerticalSign//IdDirection"/>
                        </dat:IdDirection>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:IdDirection>
                            <xsl:value-of select="//envForEach//direction/id"/>
                        </dat:IdDirection>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="(not(//envForEach//side/id) or //envForEach//side/id != '') and not(not(//envForEach//side/code))">
                        <dat:IdSide>
                            <xsl:value-of select="//returnSideValidateVRSFK//IdForeignKey"/>
                        </dat:IdSide>
                    </xsl:when>
                    <xsl:when test="(not(//envForEach//side/id) and not(//envForEach//side/code))">
                        <dat:IdSide>
                            <xsl:value-of select="//returnGetVerticalSign//IdSide"/>
                        </dat:IdSide>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:IdSide>
                            <xsl:value-of select="//envForEach//side/id"/>
                        </dat:IdSide>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/flagRegulator)">
                        <dat:FlagRegulator>
                            <xsl:value-of select="//returnGetVerticalSign//FlagRegulator"/>
                        </dat:FlagRegulator>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:FlagRegulator>
                            <xsl:value-of select="//envForEach//verticalSignInfo/flagRegulator"/>
                        </dat:FlagRegulator>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/image1)">
                        <dat:Image1>
                            <xsl:value-of select="//returnGetVerticalSign//Image1"/>
                        </dat:Image1>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Image1>
                            <xsl:value-of select="//envForEach//verticalSignInfo/image1"/>
                        </dat:Image1>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/image2)">
                        <dat:Image2>
                            <xsl:value-of select="//returnGetVerticalSign//Image2"/>
                        </dat:Image2>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Image2>
                            <xsl:value-of select="//envForEach//verticalSignInfo/image2"/>
                        </dat:Image2>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/image3)">
                        <dat:Image3>
                            <xsl:value-of select="//returnGetVerticalSign//Image3"/>
                        </dat:Image3>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Image3>
                            <xsl:value-of select="//envForEach//verticalSignInfo/image3"/>
                        </dat:Image3>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/observations)">
                        <dat:Observations>
                            <xsl:value-of select="//returnGetVerticalSign//Observations"/>
                        </dat:Observations>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Observations>
                            <xsl:value-of select="//envForEach//verticalSignInfo/observations"/>
                        </dat:Observations>
                    </xsl:otherwise>
                </xsl:choose>
                <dat:CreationUser>
                    <xsl:value-of select="//returnGetVerticalSign//CreationUser"/>
                </dat:CreationUser>
                <dat:CreationDate>
                    <xsl:value-of select="substring(//returnGetVerticalSign//CreationDate, 0,11)"/>
                </dat:CreationDate>
                <dat:LastUpdatedUser>
                    <xsl:value-of select="//envRoot//operationUser"/>
                </dat:LastUpdatedUser>
                <dat:LastUpdatedDate>
                    <xsl:value-of select="translate(date:date(), 'Z','')"/>
                </dat:LastUpdatedDate>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//version/active)">
                        <dat:Active>
                            <xsl:value-of select="//returnGetVerticalSign//Active"/>
                        </dat:Active>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Active>
                            <xsl:value-of select="//envForEach//version/active"/>
                        </dat:Active>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//version/beginDate)">
                        <dat:StartDate>
                            <xsl:value-of select="//returnGetVerticalSign//StartDate"/>
                        </dat:StartDate>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:StartDate>
                            <xsl:value-of select="//envForEach//version/beginDate"/>
                        </dat:StartDate>
                    </xsl:otherwise>
                </xsl:choose>
                <dat:EndDate>
                    <xsl:value-of select="//envForEach//version/endDate"/>
                </dat:EndDate>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/kmProject)">
                        <dat:KmProject>
                            <xsl:value-of select="//returnGetVerticalSign//KmProject"/>
                        </dat:KmProject>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:KmProject>
                            <xsl:value-of select="//envForEach//verticalSignInfo/kmProject"/>
                        </dat:KmProject>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/lot)">
                        <dat:Lot>
                            <xsl:value-of select="//returnGetVerticalSign//Lot"/>
                        </dat:Lot>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Lot>
                            <xsl:value-of select="//envForEach//verticalSignInfo/lot"/>
                        </dat:Lot>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="not(//envForEach//verticalSignInfo/flagReEstablishment)">
                        <dat:FlagReEstablishment>
                            <xsl:value-of select="//returnGetVerticalSign//FlagReEstablishment"/>
                        </dat:FlagReEstablishment>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:FlagReEstablishment>
                            <xsl:value-of select="//envForEach//verticalSignInfo/flagReEstablishment"/>
                        </dat:FlagReEstablishment>
                    </xsl:otherwise>
                </xsl:choose>
            </dat:putVerticalSign>
        </xsl:template>
    </xsl:stylesheet>
</localEntry>
