<?xml version="1.0" encoding="UTF-8"?>
<api context="/ADM_REST/CalculationType" name="api_ADMCalculationType" xmlns="http://ws.apache.org/ns/synapse">
   <resource methods="GET">
        <inSequence>
            <propertyGroup description="input">
                <property expression="$ctx:query.param.operationUser" name="operationUser" scope="default" type="STRING"/>
                <property expression="$ctx:query.param.userLanguage" name="userLanguage" scope="default" type="STRING"/>
                <property expression="$ctx:query.param.id" name="inputId" scope="default" type="STRING"/>
                <property expression="$ctx:query.param.code" name="inputCode" scope="default" type="STRING"/>
                <property expression="$ctx:query.param.offset" name="inputOffset" scope="default" type="STRING"/>
                <property expression="$ctx:query.param.pageSize" name="inputPageSize" scope="default" type="STRING"/>
                <property expression="$ctx:query.param.active" name="inputActive" scope="default" type="STRING"/>
                <property expression="get-property('axis2', 'HTTP_METHOD')" name="method" scope="default" type="STRING"/>
                <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
            </propertyGroup>
            <sequence key="seq_validateUserLanguage"/>
            <payloadFactory media-type="xml">
               <format>
                  <empty/>
               </format>
               <args/>
            </payloadFactory>
            <xslt key="trans_getADMCalculationTypeDBIn">
                <property expression="$ctx:inputId" name="inputId"/>
                <property expression="$ctx:inputCode" name="inputCode"/>
                <property expression="$ctx:validUserLanguage" name="validUserLanguage"/>
                <property expression="$ctx:inputOffset" name="inputOffset"/>
                <property expression="$ctx:inputPageSize" name="inputPageSize"/>
                <property expression="$ctx:inputActive" name="inputActive"/>
            </xslt>
            <call blocking="true">
                <endpoint>
                    <http method="post" uri-template="dsADMCalculationType-module">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </http>
                </endpoint>
            </call>
            <filter source="//*[local-name() = 'result'] = 1" regex="true">
            <then>
               <payloadFactory media-type="json" description="returnJson">
                  <format>$1</format>
                  <args>
                     <arg evaluator="xml" expression="$body//*[local-name() = 'JsonOutput']/text()"/>
                  </args>
               </payloadFactory>
               <property name="HTTP_SC" value="200" scope="axis2" type="STRING"/>
               <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
               <respond/>
            </then>
            <else>
               <propertyGroup>
                  <property name="validResultCode" value="SustIMS0151" scope="default" type="STRING"/>
                  <property name="validMessage" value="OK" scope="default" type="STRING"/>
                  <property name="validStatus" value="202" scope="default" type="STRING"/>
               </propertyGroup>
               <sequence key="seq_messageOutput"/>
               <sequence key="seq_resultOutput"/>
            </else>
         </filter>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
   <resource methods="POST" uri-template="/">
      <inSequence>
         <enrich description="input">
            <source type="body" clone="true"/>
            <target type="property" property="input"/>
         </enrich>
         <propertyGroup description="input">
            <property name="operationUser" expression="//*[local-name() = 'operationUser']" scope="default" type="STRING"/>
            <property name="userLanguage" expression="//*[local-name() = 'userLanguage']" scope="default" type="STRING"/>
            <property name="method" expression="get-property('axis2', 'HTTP_METHOD')" scope="default" type="STRING"/>
            <property name="messageType" value="application/xml" scope="axis2" type="STRING"/>
         </propertyGroup>
         <sequence key="seq_validateUserLanguage"/>
         <enrich description="restore input">
            <source type="property" clone="true" property="input"/>
            <target type="body"/>
         </enrich>
         <sequence key="seq_tableDesc"/>
         <enrich description="restore input">
            <source type="property" clone="true" property="input"/>
            <target type="body"/>
         </enrich>
         <xslt key="trans_postADMCalculationTypeDBIn">
            <property name="idTableDesc" expression="$ctx:validIdTableDesc"/>
         </xslt>
         <call blocking="true">
            <endpoint>
               <http method="POST" uri-template="dsADMCalculationType-module"/>
            </endpoint>
         </call>
         <filter source="//*[local-name() = 'result'] = 1" regex="true">
            <then>
               <propertyGroup>
                  <property name="validResultCode" expression="//*[local-name() = 'resultCode']" scope="default" type="STRING"/>
                  <property name="validMessage" expression="//*[local-name() = 'message']" scope="default" type="STRING"/>
                  <property name="validStatus" expression="//*[local-name() = 'status']" scope="default" type="STRING"/>
                  <property name="totalRecords" value="1" scope="default" type="STRING"/>
                  <property name="validId" expression="//*[local-name() = 'idOutput']" scope="default" type="STRING"/>
               </propertyGroup>
               <sequence key="seq_messageOutput"/>
               <sequence key="seq_resultOutput"/>
               <propertyGroup>
                  <property name="HTTP_SC" value="200" scope="axis2" type="STRING"/>
                  <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
               </propertyGroup>
               <respond/>
            </then>
            <else>
               <propertyGroup description="error">
                  <property name="validResultCode" expression="//*[local-name() = 'resultCode']" scope="default" type="STRING"/>
                  <property name="validMessage" expression="//*[local-name() = 'message']" scope="default" type="STRING"/>
                  <property name="validStatus" expression="//*[local-name() = 'status']" scope="default" type="STRING"/>
               </propertyGroup>
               <!-- rollback tableDesc -->
                  <propertyGroup description="rollback tableDesc">
                     <property name="idTableDesc" expression="$ctx:validIdTableDesc" scope="default" type="STRING"/>
                     <property name="method" value="DELETE" scope="default" type="STRING"/>
                  </propertyGroup>
                  <!-- output -->
                     <sequence key="seq_tableDesc"/>
                     <sequence key="seq_messageOutput"/>
                     <sequence key="seq_resultOutput"/>
                  </else>
               </filter>
            </inSequence>
            <outSequence/>
            <faultSequence/>
         </resource>
   <resource methods="PUT" uri-template="/{id}">
        <inSequence>
            <property name="inputId" expression="get-property('uri.var.id')" scope="default" type="STRING"/>
            <property name="REST_URL_POSTFIX" scope="axis2" action="remove"/>
            <script language="js">
                <![CDATA[var json = mc.getPayloadJSON(); 
            function removeEmptyStrings(obj) { 
                for (var key in obj) { 
                    if (obj[key] === "") { 
                        delete obj[key]; 
                    } else if (typeof obj[key] === "string") { 
                        obj[key] = obj[key].replace(/\\/g, "\\\\");
                    } else if (typeof obj[key] === "object" && obj[key] !== null) { 
                        removeEmptyStrings(obj[key]); 
                    } 
                } 
            }  
            removeEmptyStrings(json); 
            mc.setPayloadJSON(json);]]>
            </script>
            <enrich description="input">
                <source type="body" clone="true"/>
                <target type="property" property="input"/>
            </enrich>
            <propertyGroup description="input">
                <property name="operationUser" expression="//*[local-name() = 'operationUser']" scope="default" type="STRING"/>
                <property name="userLanguage" expression="//*[local-name() = 'userLanguage']" scope="default" type="STRING"/>
                <property name="method" expression="get-property('axis2', 'HTTP_METHOD')" scope="default" type="STRING"/>
                <property name="messageType" value="application/xml" scope="axis2" type="STRING"/>
                <property name="ds_ADMTableDesc" value="http://localhost:8290/services/ds_ADMTableDesc" scope="default" type="STRING"/>
            </propertyGroup>
            <enrich description="input">
                <source type="body" clone="true"/>
                <target type="property" property="input"/>
            </enrich>
            <sequence key="seq_validateUserLanguage"/>
            <enrich description="restore input">
                <source type="property" clone="true" property="input"/>
                <target type="body"/>
            </enrich>
            <filter xpath="((string-length(//*[local-name() = 'smallDescription']) != 0 or //*[local-name() = 'smallDescription']) or (string-length(//*[local-name() = 'mediumDescription']) != 0 or //*[local-name() = 'mediumDescription']) or (string-length(//*[local-name() = 'largeDescription']) != 0 or //*[local-name() = 'largeDescription']) or (string-length(//*[local-name() = 'active']) != 0 or //*[local-name() = 'active']))">
                <then>
                    <property name="updateTableDesc" value="true" scope="default" type="STRING"/>
                    <call-template target="temp_seq_getIdTableDesc">
                        <with-param name="fieldID" value="{$ctx:inputId}"/>
                        <with-param name="tableName" value="ADM.CalculationType"/>
                        <with-param name="fieldIdName" value="IdCalculationType"/>
                        <with-param name="uri" value="{$ctx:ds_ADMTableDesc}"/>
                    </call-template>
                    <filter xpath="$ctx:resultTD = 1">
                        <then>
                            <propertyGroup>
                                <property name="idTableDesc" expression="$ctx:validIdTableDesc" scope="default" type="STRING"/>
                            </propertyGroup>
                        </then>
                        <else>
                            <propertyGroup description="errorGetIdTableDesc">
                                <property name="validResultCode" value="SustIMS0151" scope="default" type="STRING"/>
                                <property name="validMessage" value="OK" scope="default" type="STRING"/>
                                <property name="validStatus" value="202" scope="default" type="STRING"/>
                            </propertyGroup>
                            <sequence key="seq_messageOutput"/>
                            <sequence key="seq_resultOutput"/>
                        </else>
                    </filter>
                    <enrich description="restore input">
                        <source type="property" clone="true" property="input"/>
                        <target type="body"/>
                    </enrich>
                    <sequence key="seq_tableDesc"/>
                    <enrich description="restore input">
                        <source type="property" clone="true" property="input"/>
                        <target type="body"/>
                    </enrich>
                </then>
                <else/>
            </filter>
            <enrich description="restore input">
                <source type="property" clone="true" property="input"/>
                <target type="body"/>
            </enrich>
            <xslt key="trans_putADMCalculationTypeDBIn" description="inputDB_xslt">
                <property name="idCalculationType" expression="$ctx:inputId"/>
                <property name="operationUser" expression="$ctx:operationUser"/>
            </xslt>
            <call blocking="true">
                <endpoint>
                    <http method="POST" uri-template="dsADMCalculationType-module"/>
                </endpoint>
            </call>
            <filter source="//*[local-name() = 'result'] = 1" regex="true">
                <then>
                    <propertyGroup>
                        <property name="validResultCode" expression="//*[local-name() = 'resultCode']" scope="default" type="STRING"/>
                        <property name="validMessage" expression="//*[local-name() = 'message']" scope="default" type="STRING"/>
                        <property name="validStatus" expression="//*[local-name() = 'status']" scope="default" type="STRING"/>
                        <property name="totalRecords" value="1" scope="default" type="STRING"/>
                        <property name="validId" expression="//*[local-name() = 'idOutput']" scope="default" type="STRING"/>
                    </propertyGroup>
                    <sequence key="seq_messageOutput"/>
                    <sequence key="seq_resultOutput"/>
                    <propertyGroup>
                        <property name="HTTP_SC" value="200" scope="axis2" type="STRING"/>
                        <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
                    </propertyGroup>
                    <respond/>
                </then>
                <else>
                    <propertyGroup description="error">
                        <property name="validResultCode" expression="//*[local-name() = 'resultCode']" scope="default" type="STRING"/>
                        <property name="validMessage" expression="//*[local-name() = 'message']" scope="default" type="STRING"/>
                        <property name="validStatus" expression="//*[local-name() = 'status']" scope="default" type="STRING"/>
                    </propertyGroup>
                    <!-- rollback tableDesc -->
                    <filter source="$ctx:updateTableDesc = 'true'" regex="true">
                        <then>
                            <property name="idTableDesc" expression="$ctx:validIdTableDesc" scope="default" type="STRING"/>
                            <sequence key="seq_tableDesc"/>
                        </then>
                        <else/>
                    </filter>
                    <sequence key="seq_messageOutput"/>
                    <sequence key="seq_resultOutput"/>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
   <resource methods="DELETE" uri-template="/{id}">
       <inSequence>
            <!-- <sequence key="seq_validateToken"/> -->
          <propertyGroup description="input">
             <property name="inputId" expression="get-property('uri.var.id')" scope="default" type="STRING"/>
             <property name="method" expression="get-property('axis2', 'HTTP_METHOD')" scope="default" type="STRING"/>
                <property name="messageType" scope="axis2" type="STRING" value="application/xml"/>
          </propertyGroup>
          <payloadFactory media-type="xml" description="deleteUser">
             <format>
                <dat:deleteCalculationType xmlns:dat="http://ws.wso2.org/dataservice">
                   <dat:Operation>$1</dat:Operation>
                   <dat:IdCalculationType>$2</dat:IdCalculationType>
                </dat:deleteCalculationType>
             </format>
             <args>
                <arg value="DELETE"/>
                <arg evaluator="xml" expression="$ctx:inputId"/>
             </args>
          </payloadFactory>
          <call blocking="true">
             <endpoint>
                <http method="POST" uri-template="dsADMCalculationType-module"/>
             </endpoint>
          </call>
          <filter source="//*[local-name() = 'result'] = 1" regex="true">
             <then>
                <propertyGroup>
                   <property name="validResultCode" expression="//*[local-name() = 'resultCode']" scope="default" type="STRING"/>
                   <property name="validMessage" expression="//*[local-name() = 'message']" scope="default" type="STRING"/>
                   <property name="validStatus" expression="//*[local-name() = 'status']" scope="default" type="STRING"/>
                   <property name="totalRecords" value="1" scope="default" type="STRING"/>
                   <property name="validId" expression="//*[local-name() = 'idOutput']" scope="default" type="STRING"/>
                </propertyGroup>
                <sequence key="seq_messageOutput"/>
                <sequence key="seq_resultOutput"/>
                <propertyGroup>
                   <property name="HTTP_SC" value="200" scope="axis2" type="STRING"/>
                   <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
                </propertyGroup>
                <respond/>
             </then>
             <else>
                <propertyGroup description="error">
                   <property name="validResultCode" expression="//*[local-name() = 'resultCode']" scope="default" type="STRING"/>
                   <property name="validMessage" expression="//*[local-name() = 'message']" scope="default" type="STRING"/>
                   <property name="validStatus" expression="//*[local-name() = 'status']" scope="default" type="STRING"/>
                </propertyGroup>
                <sequence key="seq_messageOutput"/>
                <sequence key="seq_resultOutput"/>
             </else>
          </filter>
       </inSequence>
       <outSequence/>
       <faultSequence/>
    </resource>
</api>
