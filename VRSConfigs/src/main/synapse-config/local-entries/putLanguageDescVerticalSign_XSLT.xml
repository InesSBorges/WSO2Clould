<?xml version="1.0" encoding="UTF-8"?>
<localEntry key="putLanguageDescVerticalSign_XSLT" xmlns="http://ws.apache.org/ns/synapse">
    <xsl:stylesheet extension-element-prefixes="date" version="2.0" xmlns:dat="http://ws.wso2.org/dataservice" xmlns:date="http://exslt.org/dates-and-times" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
        <xsl:template match="/">
            <dat:putLanguageDesc>
                <dat:IdLanguageDesc>
                    <xsl:value-of select="//returnTableDesc/IdLanguageDesc/text()"/>
                </dat:IdLanguageDesc>
                <xsl:choose>
                    <xsl:when test="string-length(//envForEach//idLanguage) > 0">
                        <dat:IdLanguage>
                            <xsl:value-of select="//envForEach//idLanguage/text()"/>
                        </dat:IdLanguage>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="string-length(//returnTableDesc/IdLanguage) > 0">
                            <dat:IdLanguage>
                                <xsl:value-of select="//returnTableDesc//IdLanguage/text()"/>
                            </dat:IdLanguage>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//envForEach//smallDescription">
                        <dat:DescriptionSmall>
                            <xsl:value-of select="//envForEach//smallDescription/text()"/>
                        </dat:DescriptionSmall>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="string-length(//returnGetVerticalSign//DescSmallVerticalSign) > 0">
                            <dat:DescriptionSmall>
                                <xsl:value-of select="//returnGetVerticalSign//DescSmallVerticalSign"/>
                            </dat:DescriptionSmall>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//envForEach//mediumDescription">
                        <dat:DescriptionMedium>
                            <xsl:value-of select="//envForEach//mediumDescription/text()"/>
                        </dat:DescriptionMedium>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="not(//envForEach//mediumDescription)">
                            <dat:DescriptionMedium>
                                <xsl:value-of select="//returnGetVerticalSign//DescMediumVerticalSign/text()"/>
                            </dat:DescriptionMedium>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="//envForEach//largeDescription">
                        <dat:DescriptionLarge>
                            <xsl:value-of select="//envForEach//largeDescription/text()"/>
                        </dat:DescriptionLarge>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="string-length(//returnGetVerticalSign//DescLargeVerticalSign) > 0">
                            <dat:DescriptionLarge>
                                <xsl:value-of select="//returnGetVerticalSign//DescLargeVerticalSign/text()"/>
                            </dat:DescriptionLarge>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
                <dat:LastUpdatedUser>
                    <xsl:value-of select="//envRoot//operationUser"/>
                </dat:LastUpdatedUser>
                <dat:LastUpdatedDate>
                    <xsl:value-of select="translate(date:date(), 'Z','')"/>
                </dat:LastUpdatedDate>
                <xsl:choose>
                    <xsl:when test="//envForEach//version/active">
                        <dat:Active>
                            <xsl:value-of select="//envForEach//version/active/text()"/>
                        </dat:Active>
                    </xsl:when>
                    <xsl:otherwise>
                        <dat:Active>
                            <xsl:value-of select="//returnTableDesc//Active/text()"/>
                        </dat:Active>
                    </xsl:otherwise>
                </xsl:choose>
            </dat:putLanguageDesc>
        </xsl:template>
    </xsl:stylesheet>
</localEntry>
